---
project_name: "nova"

nova_services:
  nova-api:
    container_name: "nova_api"
    group: "nova-api"
    image: "{{ nova_api_image_full }}"
    enabled: True
    privileged: True
    volumes: "{{ nova_api_default_volumes + nova_api_extra_volumes }}"
    dimensions: "{{ nova_api_dimensions }}"
    haproxy:
      nova_api:
        enabled: "{{ enable_nova }}"
        mode: "http"
        external: false
        port: "{{ nova_api_port }}"
        listen_port: "{{ nova_api_listen_port }}"
      nova_api_external:
        enabled: "{{ enable_nova }}"
        mode: "http"
        external: true
        port: "{{ nova_api_port }}"
        listen_port: "{{ nova_api_listen_port }}"
      nova_metadata:
        enabled: "{{ enable_nova }}"
        mode: "http"
        external: false
        port: "{{ nova_metadata_port }}"
        listen_port: "{{ nova_metadata_listen_port }}"
      nova_metadata_external:
        enabled: "{{ enable_nova }}"
        mode: "http"
        external: true
        port: "{{ nova_metadata_port }}"
        listen_port: "{{ nova_metadata_listen_port }}"
      nova_rdp:
        enabled: "{{ enable_nova|bool and nova_console == 'rdp' }}"
        mode: "http"
        external: false
        port: "{{ rdp_port }}"
        host_group: "hyperv"
  nova-novncproxy:
    container_name: "nova_novncproxy"
    group: "nova-novncproxy"
    image: "{{ nova_novncproxy_image_full }}"
    enabled: "{{ nova_console == 'novnc' }}"
    volumes: "{{ nova_novncproxy_default_volumes + nova_novncproxy_extra_volumes }}"
    dimensions: "{{ nova_novncproxy_dimensions }}"
    haproxy:
      nova_novncproxy:
        enabled: "{{ enable_nova|bool and nova_console == 'novnc' }}"
        mode: "http"
        external: false
        port: "{{ nova_novncproxy_port }}"
        listen_port: "{{ nova_novncproxy_listen_port }}"
        backend_http_extra:
          - "timeout tunnel 1h"
      nova_novncproxy_external:
        enabled: "{{ enable_nova|bool and nova_console == 'novnc' }}"
        mode: "http"
        external: true
        port: "{{ nova_novncproxy_port }}"
        listen_port: "{{ nova_novncproxy_listen_port }}"
  nova-scheduler:
    container_name: "nova_scheduler"
    group: "nova-scheduler"
    image: "{{ nova_scheduler_image_full }}"
    enabled: True
    volumes: "{{ nova_scheduler_default_volumes + nova_scheduler_extra_volumes }}"
    dimensions: "{{ nova_scheduler_dimensions }}"
  nova-spicehtml5proxy:
    container_name: "nova_spicehtml5proxy"
    group: "nova-spicehtml5proxy"
    image: "{{ nova_spicehtml5proxy_image_full }}"
    enabled: "{{ nova_console == 'spice' }}"
    volumes: "{{ nova_spicehtml5proxy_default_volumes + nova_spicehtml5proxy_extra_volumes }}"
    dimensions: "{{ nova_spicehtml5proxy_dimensions }}"
    haproxy:
      nova_spicehtml5proxy:
        enabled: "{{ enable_nova|bool and nova_console == 'spice' }}"
        mode: "http"
        external: false
        port: "{{ nova_spicehtml5proxy_port }}"
        listen_port: "{{ nova_spicehtml5proxy_listen_port }}"
      nova_spicehtml5proxy_external:
        enabled: "{{ enable_nova|bool and nova_console == 'spice' }}"
        mode: "http"
        external: true
        port: "{{ nova_spicehtml5proxy_port }}"
        listen_port: "{{ nova_spicehtml5proxy_listen_port }}"
  nova-serialproxy:
    container_name: "nova_serialproxy"
    group: "nova-serialproxy"
    image: "{{ nova_serialproxy_image_full }}"
    enabled: "{{ enable_nova_serialconsole_proxy | bool }}"
    volumes: "{{ nova_serialproxy_default_volumes + nova_serialproxy_extra_volumes }}"
    dimensions: "{{ nova_serialproxy_dimensions }}"
    haproxy:
      nova_serialconsole_proxy:
        enabled: "{{ enable_nova|bool and enable_nova_serialconsole_proxy|bool }}"
        mode: "http"
        external: false
        port: "{{ nova_serialproxy_port }}"
        listen_port: "{{ nova_serialproxy_listen_port }}"
        backend_http_extra:
          - "timeout tunnel {{ haproxy_nova_serialconsole_proxy_tunnel_timeout }}"
      nova_serialconsole_proxy_external:
        enabled: "{{ enable_nova|bool and enable_nova_serialconsole_proxy|bool }}"
        mode: "http"
        external: true
        port: "{{ nova_serialproxy_port }}"
        listen_port: "{{ nova_serialproxy_listen_port }}"
        backend_http_extra:
          - "timeout tunnel {{ haproxy_nova_serialconsole_proxy_tunnel_timeout }}"
  nova-super-conductor:
    container_name: "nova_super_conductor"
    group: "nova-super-conductor"
    enabled: "{{ enable_cells }}"
    image: "{{ nova_super_conductor_image_full }}"
    volumes: "{{ nova_super_conductor_default_volumes + nova_super_conductor_extra_volumes }}"
    dimensions: "{{ nova_super_conductor_dimensions }}"

####################
# Database
####################
nova_database_name: "nova"
nova_database_user: "{% if use_preconfigured_databases | bool and use_common_mariadb_user | bool %}{{ database_user }}{% else %}nova{% endif %}"
nova_database_address: "{{ database_address }}:{{ database_port }}"

nova_api_database_name: "nova_api"
nova_api_database_user: "{% if use_preconfigured_databases | bool and use_common_mariadb_user | bool %}{{ database_user }}{% else %}nova_api{% endif %}"
nova_api_database_address: "{{ database_address }}:{{ database_port }}"

####################
# Docker
####################
nova_install_type: "{{ kolla_install_type }}"
nova_tag: "{{ openstack_release }}"

nova_super_conductor_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/{{ kolla_base_distro }}-{{ nova_install_type }}-nova-conductor"
nova_super_conductor_tag: "{{ nova_tag }}"
nova_super_conductor_image_full: "{{ nova_super_conductor_image }}:{{ nova_super_conductor_tag }}"

nova_novncproxy_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/{{ kolla_base_distro }}-{{ nova_install_type }}-nova-novncproxy"
nova_novncproxy_tag: "{{ nova_tag }}"
nova_novncproxy_image_full: "{{ nova_novncproxy_image }}:{{ nova_novncproxy_tag }}"

nova_spicehtml5proxy_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/{{ kolla_base_distro }}-{{ nova_install_type }}-nova-spicehtml5proxy"
nova_spicehtml5proxy_tag: "{{ nova_tag }}"
nova_spicehtml5proxy_image_full: "{{ nova_spicehtml5proxy_image }}:{{ nova_spicehtml5proxy_tag }}"

nova_scheduler_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/{{ kolla_base_distro }}-{{ nova_install_type }}-nova-scheduler"
nova_scheduler_tag: "{{ nova_tag }}"
nova_scheduler_image_full: "{{ nova_scheduler_image }}:{{ nova_scheduler_tag }}"

nova_api_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/{{ kolla_base_distro }}-{{ nova_install_type }}-nova-api"
nova_api_tag: "{{ nova_tag }}"
nova_api_image_full: "{{ nova_api_image }}:{{ nova_api_tag }}"

nova_serialproxy_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/{{ kolla_base_distro }}-{{ nova_install_type }}-nova-serialproxy"
nova_serialproxy_tag: "{{ nova_tag }}"
nova_serialproxy_image_full: "{{ nova_serialproxy_image }}:{{ nova_serialproxy_tag }}"

nova_api_dimensions: "{{ default_container_dimensions }}"
nova_novncproxy_dimensions: "{{ default_container_dimensions }}"
nova_scheduler_dimensions: "{{ default_container_dimensions }}"
nova_spicehtml5proxy_dimensions: "{{ default_container_dimensions }}"
nova_serialproxy_dimensions: "{{ default_container_dimensions }}"
nova_super_conductor_dimensions: "{{ default_container_dimensions }}"

nova_api_default_volumes:
  - "{{ node_config_directory }}/nova-api/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "/lib/modules:/lib/modules:ro"
  - "kolla_logs:/var/log/kolla/"
  - "{{ kolla_dev_repos_directory ~ '/nova/nova:/var/lib/kolla/venv/lib/python2.7/site-packages/nova' if nova_dev_mode | bool else '' }}"
nova_novncproxy_default_volumes:
  - "{{ node_config_directory }}/nova-novncproxy/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "kolla_logs:/var/log/kolla/"
  - "{{ kolla_dev_repos_directory ~ '/nova/nova:/var/lib/kolla/venv/lib/python2.7/site-packages/nova' if nova_dev_mode | bool else '' }}"
nova_scheduler_default_volumes:
  - "{{ node_config_directory }}/nova-scheduler/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "kolla_logs:/var/log/kolla/"
  - "{{ kolla_dev_repos_directory ~ '/nova/nova:/var/lib/kolla/venv/lib/python2.7/site-packages/nova' if nova_dev_mode | bool else '' }}"
nova_spicehtml5proxy_default_volumes:
  - "{{ node_config_directory }}/nova-spicehtml5proxy/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "kolla_logs:/var/log/kolla/"
  - "{{ kolla_dev_repos_directory ~ '/nova/nova:/var/lib/kolla/venv/lib/python2.7/site-packages/nova' if nova_dev_mode | bool else '' }}"
nova_serialproxy_default_volumes:
  - "{{ node_config_directory }}/nova-serialproxy/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "kolla_logs:/var/log/kolla/"
  - "{{ kolla_dev_repos_directory ~ '/nova/nova:/var/lib/kolla/venv/lib/python2.7/site-packages/nova' if nova_dev_mode | bool else '' }}"
nova_super_conductor_default_volumes:
  - "{{ node_config_directory }}/nova-super-conductor/:{{ container_config_directory }}/:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "kolla_logs:/var/log/kolla/"
  - "{{ kolla_dev_repos_directory ~ '/nova/nova:/var/lib/kolla/venv/lib/python2.7/site-packages/nova' if nova_dev_mode | bool else '' }}"

nova_extra_volumes: "{{ default_extra_volumes }}"
nova_api_extra_volumes: "{{ nova_extra_volumes }}"
nova_novncproxy_extra_volumes: "{{ nova_extra_volumes }}"
nova_scheduler_extra_volumes: "{{ nova_extra_volumes }}"
nova_spicehtml5proxy_extra_volumes: "{{ nova_extra_volumes }}"
nova_serialproxy_extra_volumes: "{{ nova_extra_volumes }}"
nova_super_conductor_extra_volumes: "{{ nova_extra_volumes }}"


####################
# HAProxy
####################
haproxy_nova_serialconsole_proxy_tunnel_timeout: "10m"

####################
# OpenStack
####################

nova_legacy_admin_endpoint: "{{ admin_protocol }}://{{ nova_internal_fqdn }}:{{ nova_api_port }}/v2/%(tenant_id)s"
nova_legacy_internal_endpoint: "{{ internal_protocol }}://{{ nova_internal_fqdn }}:{{ nova_api_port }}/v2/%(tenant_id)s"
nova_legacy_public_endpoint: "{{ public_protocol }}://{{ nova_external_fqdn }}:{{ nova_api_port }}/v2/%(tenant_id)s"

nova_admin_endpoint: "{{ admin_protocol }}://{{ nova_internal_fqdn }}:{{ nova_api_port }}/v2.1"
nova_internal_endpoint: "{{ internal_protocol }}://{{ nova_internal_fqdn }}:{{ nova_api_port }}/v2.1"
nova_public_endpoint: "{{ public_protocol }}://{{ nova_external_fqdn }}:{{ nova_api_port }}/v2.1"

nova_logging_debug: "{{ openstack_logging_debug }}"

openstack_nova_auth: "{{ openstack_auth }}"

nova_enable_rolling_upgrade: "yes"
nova_safety_upgrade: "no"

nova_services_require_nova_conf:
  - nova-api
  - nova-super-conductor
  - nova-novncproxy
  - nova-serialproxy
  - nova-scheduler
  - nova-spicehtml5proxy

####################
# Keystone
####################
nova_ks_services:
  - name: "nova_legacy"
    type: "compute_legacy"
    description: "OpenStack Compute Service (Legacy 2.0)"
    endpoints:
      - {'interface': 'admin', 'url': '{{ nova_legacy_admin_endpoint }}'}
      - {'interface': 'internal', 'url': '{{ nova_legacy_internal_endpoint }}'}
      - {'interface': 'public', 'url': '{{ nova_legacy_public_endpoint }}'}
  - name: "nova"
    type: "compute"
    description: "OpenStack Compute Service"
    endpoints:
      - {'interface': 'admin', 'url': '{{ nova_admin_endpoint }}'}
      - {'interface': 'internal', 'url': '{{ nova_internal_endpoint }}'}
      - {'interface': 'public', 'url': '{{ nova_public_endpoint }}'}

nova_ks_users:
  - project: "service"
    user: "{{ nova_keystone_user }}"
    password: "{{ nova_keystone_password }}"
    role: "admin"

####################
# Notification
####################
nova_notification_topics:
  - name: notifications
    enabled: "{{ enable_ceilometer | bool or enable_searchlight | bool or enable_neutron_infoblox_ipam_agent | bool }}"
  - name: notifications_designate
    enabled: "{{ enable_designate | bool }}"
  - name: vitrage_notifications
    enabled: "{{ enable_vitrage | bool }}"

nova_enabled_notification_topics: "{{ nova_notification_topics | selectattr('enabled', 'equalto', true) | list }}"

####################
# Kolla
####################
nova_git_repository: "{{ kolla_dev_repos_git }}/{{ project_name }}"
nova_dev_repos_pull: "{{ kolla_dev_repos_pull }}"
nova_dev_mode: "{{ kolla_dev_mode }}"
nova_source_version: "{{ kolla_source_version }}"
