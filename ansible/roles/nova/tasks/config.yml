---
- name: Ensuring config directories exist
  become: true
  file:
    path: "{{ node_config_directory }}/{{ item.key }}"
    state: "directory"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0770"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ nova_services }}"

- name: Check if policies shall be overwritten
  local_action: stat path="{{ item }}"
  run_once: True
  register: nova_policy
  with_first_found:
    - files: "{{ supported_policy_format_list }}"
      paths:
        - "{{ node_custom_config }}/nova/"
      skip: true

- name: Set nova policy file
  set_fact:
    nova_policy_file: "{{ nova_policy.results.0.stat.path | basename }}"
    nova_policy_file_path: "{{ nova_policy.results.0.stat.path }}"
  when:
    - nova_policy.results

- name: Copying over config.json files for services
  become: true
  template:
    src: "{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/config.json"
    mode: "0660"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ nova_services }}"
  notify:
    - "Restart {{ item.key }} container"

- name: Copying over nova.conf
  become: true
  vars:
    service_name: "{{ item.key }}"
  merge_configs:
    sources:
      - "{{ role_path }}/templates/nova.conf.j2"
      - "{{ node_custom_config }}/global.conf"
      - "{{ node_custom_config }}/nova.conf"
      - "{{ node_custom_config }}/nova/{{ item.key }}.conf"
      - "{{ node_custom_config }}/nova/{{ inventory_hostname }}/nova.conf"
    dest: "{{ node_config_directory }}/{{ item.key }}/nova.conf"
    mode: "0660"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
    - item.key in nova_services_require_nova_conf
  with_dict: "{{ nova_services }}"
  notify:
    - "Restart {{ item.key }} container"

- name: Copying over existing policy file
  become: true
  vars:
    services_require_policy_json:
      - nova-api
      - nova-super-conductor
      - nova-novncproxy
      - nova-serialproxy
      - nova-scheduler
      - nova-spicehtml5proxy
  template:
    src: "{{ nova_policy_file_path }}"
    dest: "{{ node_config_directory }}/{{ item.key }}/{{ nova_policy_file }}"
    mode: "0660"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
    - nova_policy_file is defined
    - item.key in services_require_policy_json
  with_dict: "{{ nova_services }}"
  notify:
    - "Restart {{ item.key }} container"

# check whether the containers parameter is changed. If yes, trigger the handler
- name: Check nova containers
  become: true
  kolla_docker:
    action: "compare_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ item.value.container_name }}"
    image: "{{ item.value.image }}"
    environment: "{{ item.value.environment|default(omit) }}"
    pid_mode: "{{ item.value.pid_mode|default('') }}"
    ipc_mode: "{{ item.value.ipc_mode|default(omit) }}"
    privileged: "{{ item.value.privileged|default(False) }}"
    volumes: "{{ item.value.volumes|reject('equalto', '')|list }}"
    dimensions: "{{ item.value.dimensions }}"
  when:
    - kolla_action != "config"
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ nova_services }}"
  notify:
    - "Restart {{ item.key }} container"
