---
- name: Ensuring config directories exist
  file:
    path: "{{ node_config_directory }}/{{ item.key }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0770"
    recurse: yes
  become: true
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ spark_services }}"

- name: Copying over config.json files for services
  template:
    src: "{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/config.json"
    mode: "0660"
  become: true
  register: spark_config_jsons
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ spark_services }}"
  notify:
    - "Restart {{ item.key }} container"

- name: Copying over spark master config
  vars:
    service: "{{ spark_services['spark-master'] }}"
  template:
    src: "{{ item }}"
    dest: "{{ node_config_directory }}/spark-master/spark-defaults.conf"
    mode: "0660"
  become: true
  register: spark_master_conf
  with_first_found:
    - "{{ node_custom_config }}/spark/{{ inventory_hostname }}/spark-defaults.conf"
    - "{{ node_custom_config }}/spark-defaults.conf"
    - "spark-defaults.conf.j2"
  when:
    - inventory_hostname in groups[service['group']]
    - service.enabled | bool
  notify:
    - Restart spark-master container

# TODO: Could merge with above? Same for storm
- name: Copying over spark slave config
  vars:
    service: "{{ spark_services['spark-slave'] }}"
  template:
    src: "{{ item }}"
    dest: "{{ node_config_directory }}/spark-slave/spark-defaults.conf"
    mode: "0660"
  become: true
  register: spark_slave_conf
  with_first_found:
    - "{{ node_custom_config }}/spark/{{ inventory_hostname }}/spark-defaults.conf"
    - "{{ node_custom_config }}/spark-defaults.conf"
    - "spark-defaults.conf.j2"
  when:
    - inventory_hostname in groups[service['group']]
    - service.enabled | bool
  notify:
    - Restart spark-slave container

- name: Check spark containers
  kolla_docker:
    action: "compare_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ item.value.container_name }}"
    image: "{{ item.value.image }}"
    volumes: "{{ item.value.volumes }}"
    environment: "{{ item.value.environment }}"
  register: check_spark_containers
  when:
    - action != "config"
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ spark_services }}"
  notify:
    - "Restart {{ item.key }} container"
